# from simsio import gen_configs
# import numpy as np
# params = {
#     "K": np.arange(1, 6),
#     "dropout": np.arange(4) / 10,
# }
# gen_configs("template", params, "II/2C")
===:
  template: |
    n$enum:
      <<<: common
      model: {<<<: mod$K, vars: {dropout: $dropout}}
  mod1:
    layers:
    - tf.keras.layers.Dense(2, activation="elu")
    - tf.keras.layers.Dense(125, activation="elu")
    - tf.keras.layers.Dropout(dropout)
    - tf.keras.layers.Dense(1, activation="sigmoid")
  mod2:
    layers:
    - tf.keras.layers.Dense(2, activation="elu")
    - tf.keras.layers.Dense(20, activation="elu")
    - tf.keras.layers.Dropout(dropout)
    - tf.keras.layers.Dense(20, activation="elu")
    - tf.keras.layers.Dropout(dropout)
    - tf.keras.layers.Dense(1, activation="sigmoid")
  mod3:
    layers:
    - tf.keras.layers.Dense(2, activation="elu")
    - tf.keras.layers.Dense(16, activation="elu")
    - tf.keras.layers.Dropout(dropout)
    - tf.keras.layers.Dense(16, activation="elu")
    - tf.keras.layers.Dropout(dropout)
    - tf.keras.layers.Dense(10, activation="elu")
    - tf.keras.layers.Dropout(dropout)
    - tf.keras.layers.Dense(1, activation="sigmoid")
  mod4:
    layers:
    - tf.keras.layers.Dense(2, activation="elu")
    - tf.keras.layers.Dense(11, activation="elu")
    - tf.keras.layers.Dropout(dropout)
    - tf.keras.layers.Dense(12, activation="elu")
    - tf.keras.layers.Dropout(dropout)
    - tf.keras.layers.Dense(12, activation="elu")
    - tf.keras.layers.Dropout(dropout)
    - tf.keras.layers.Dense(12, activation="elu")
    - tf.keras.layers.Dropout(dropout)
    - tf.keras.layers.Dense(1, activation="sigmoid")
  mod5:
    layers:
    - tf.keras.layers.Dense(2, activation="elu")
    - tf.keras.layers.Dense(11, activation="elu")
    - tf.keras.layers.Dropout(dropout)
    - tf.keras.layers.Dense(10, activation="elu")
    - tf.keras.layers.Dropout(dropout)
    - tf.keras.layers.Dense(10, activation="elu")
    - tf.keras.layers.Dropout(dropout)
    - tf.keras.layers.Dense(10, activation="elu")
    - tf.keras.layers.Dropout(dropout)
    - tf.keras.layers.Dense(10, activation="elu")
    - tf.keras.layers.Dropout(dropout)
    - tf.keras.layers.Dense(1, activation="sigmoid")
  common:
    samples: 100
    input:
      N: 4000
      train_frac: 0.8
      rescale: 50
      offset: 0
    compile:
      optimizer: adam
      loss: binary_crossentropy
      metrics: [accuracy]
      steps_per_execution: 4
    fit:
      epochs: 500
      batch_size: 50
      verbose: 0
n0:
  <<<: common
  model: {<<<: mod1, vars: {dropout: 0.0}}
n1:
  <<<: common
  model: {<<<: mod1, vars: {dropout: 0.1}}
n2:
  <<<: common
  model: {<<<: mod1, vars: {dropout: 0.2}}
n3:
  <<<: common
  model: {<<<: mod1, vars: {dropout: 0.3}}
n4:
  <<<: common
  model: {<<<: mod2, vars: {dropout: 0.0}}
n5:
  <<<: common
  model: {<<<: mod2, vars: {dropout: 0.1}}
n6:
  <<<: common
  model: {<<<: mod2, vars: {dropout: 0.2}}
n7:
  <<<: common
  model: {<<<: mod2, vars: {dropout: 0.3}}
n8:
  <<<: common
  model: {<<<: mod3, vars: {dropout: 0.0}}
n9:
  <<<: common
  model: {<<<: mod3, vars: {dropout: 0.1}}
n10:
  <<<: common
  model: {<<<: mod3, vars: {dropout: 0.2}}
n11:
  <<<: common
  model: {<<<: mod3, vars: {dropout: 0.3}}
n12:
  <<<: common
  model: {<<<: mod4, vars: {dropout: 0.0}}
n13:
  <<<: common
  model: {<<<: mod4, vars: {dropout: 0.1}}
n14:
  <<<: common
  model: {<<<: mod4, vars: {dropout: 0.2}}
n15:
  <<<: common
  model: {<<<: mod4, vars: {dropout: 0.3}}
n16:
  <<<: common
  model: {<<<: mod5, vars: {dropout: 0.0}}
n17:
  <<<: common
  model: {<<<: mod5, vars: {dropout: 0.1}}
n18:
  <<<: common
  model: {<<<: mod5, vars: {dropout: 0.2}}
n19:
  <<<: common
  model: {<<<: mod5, vars: {dropout: 0.3}}


